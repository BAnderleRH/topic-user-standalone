apiVersion: v1
kind: ServiceAccount
metadata:
  name: strimzi-topic-operator
  labels:
    app: strimzi
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: strimzi-topic-operator
  labels:
    app: strimzi
rules:
- apiGroups:
  - "kafka.strimzi.io"
  resources:
  - kafkatopics
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - update
  - delete
- apiGroups:
  - "kafka.strimzi.io"
  resources:
  - kafkatopics/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
--- 
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: strimzi-topic-operator
  labels:
    app: strimzi
subjects:
  - kind: ServiceAccount
    name: strimzi-topic-operator
roleRef:
  kind: Role
  name: strimzi-topic-operator
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: strimzi-topic-operator
  labels:
    app: strimzi
spec:
  replicas: 1
  selector:
    matchLabels:
      name: strimzi-topic-operator
  template:
    metadata:
      labels:
        name: strimzi-topic-operator
        com.company: Red_Hat
        rht.prod_name: Red_Hat_Application_Foundations
        rht.prod_ver: 2024.Q2
        rht.comp: AMQ_Streams
        rht.comp_ver: "2.7"
        rht.subcomp: topic-operator
        rht.subcomp_t: infrastructure
    spec:
      serviceAccountName: strimzi-topic-operator
      volumes:
        - name: strimzi-tmp
          emptyDir:
            medium: Memory
            sizeLimit: 5Mi
      containers:
        - name: strimzi-topic-operator
          image: registry.redhat.io/amq-streams/strimzi-rhel9-operator:2.7.0
          args:
            - /opt/strimzi/bin/topic_operator_run.sh
          volumeMounts:
            - name: strimzi-tmp
              mountPath: /tmp
          env:
            - name: STRIMZI_RESOURCE_LABELS
              value: "strimzi.io/cluster=platform-cluster"
            - name: STRIMZI_KAFKA_BOOTSTRAP_SERVERS
              value: platform-cluster-kafka-bootstrap.stream-services.svc:9093
            - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
              value: "120000"
            - name: STRIMZI_LOG_LEVEL
              value: INFO
            - name: STRIMZI_TLS_ENABLED
              value: "true"
            - name: STRIMZI_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: STRIMZI_SASL_ENABLED
              value: "true"
            - name: STRIMZI_SECURITY_PROTOCOL
              value: SASL_SSL
            - name: STRIMZI_SKIP_CLUSTER_CONFIG_REVIEW
              value: "true"
            - name: STRIMZI_ALTERABLE_TOPIC_CONFIG
              value: compression.type, max.message.bytes, message.timestamp.difference.max.ms, message.timestamp.type, retention.bytes, retention.ms
            - name: STRIMZI_SASL_CUSTOM_CONFIG_JSON
              value: |
                {
                  "sasl.mechanism": "OAUTHBEARER",
                  "sasl.jaas.config": "org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required;",
                    oauth.token.endpoint.uri="https://login.microsoftonline.com/18a59a81-eea8-4c30-948a-d8824cdc2580/oauth2/v2.0/token" \ 
                    oauth.client.id="9b36d257-1a58-48b2-aa07-af5400f0ba2e" \ 
                    oauth.client.secret="zUE8Q~14~Bo2BA0O5uzlLXRygvD~KgezsQ34vaNE" \ 
                    oauth.scope="api://443ec776-fca2-4bc8-a539-58a43145de4c/.default" \ 
                    oauth.grant.type="client_credentials" ;, 
                  "sasl.login.callback.handler.class"="io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler"
                }
            - name: STRIMZI_PUBLIC_CA
              value: "true"
            - name: STRIMZI_TRUSTSTORE_LOCATION
              value: /platform-cluster-certs/ca.p12
            - name: STRIMZI_TRUSTSTORE_PASSWORD
              value: ouvBbu99PSCp
          livenessProbe:
            httpGet:
              path: /healthy
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
          resources:
            limits:
              memory: 256Mi
              cpu: 500m
            requests:
              memory: 256Mi
              cpu: 100m
  strategy:
    type: Recreate
